import sqlite3
from cgitb import html
import telebot
from io import BytesIO
from docxtpl import DocxTemplate
from telebot import types
from telebot.types import InlineKeyboardButton
import hashlib

doc = DocxTemplate("–í—ã—Ö–æ–¥–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç.docx")

autoinfo = r'''f"""
–î–∞–Ω–Ω—ã–µ –æ–± –∞–≤—Ç–æ:

1) –ù–æ–º–µ—Ä –¢–°: {x[0]}
2) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞: {x[1]}
3) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è: {x[2]}
4) –ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {x[3]}
5) –ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {x[4]}
6) –¶–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {x[5]}
7) –û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {x[6]} –ª.
8) –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ: {x[7]}
9) –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–ª—è: {x[8]}
10) –ü—Ä–∏–≤–æ–¥ –∞–≤—Ç–æ: {x[9]}
11) –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {x[10]}
12) –¢–∏–ø –∫—É–∑–æ–≤–∞: {x[11]}
13) –ù–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∞–≤—Ç–æ –≤ —É–≥–æ–Ω–µ? - {x[12]}
14) –î–∞—Ç–∞ —É–≥–æ–Ω–∞: {x[13]}
15) –¢–∏–ø –≤–ª–∞–¥–µ–ª—å—Ü–∞: {x[14]}                             (–§–∏–∑. –ª–∏—Ü–æ - 1, –Æ—Ä. –ª–∏—Ü–æ - 0)
"""'''

autoinfoedit = r'''f"""
–î–∞–Ω–Ω—ã–µ –æ–± –∞–≤—Ç–æ:

1) –ù–æ–º–µ—Ä –¢–°: {x[0]}
2) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞: {x[1]}
3) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è: {x[2]}
4) –ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {x[3]}
5) –ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {x[4]}
6) –¶–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {x[5]}
7) –û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {x[6]} –ª.
8) –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ: {x[7]}
9) –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–ª—è: {x[8]}
10) –ü—Ä–∏–≤–æ–¥ –∞–≤—Ç–æ: {x[9]}
11) –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {x[10]}
12) –¢–∏–ø –∫—É–∑–æ–≤–∞: {x[11]}
13) –ù–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∞–≤—Ç–æ –≤ —É–≥–æ–Ω–µ? - {x[12]}
14) –î–∞—Ç–∞ —É–≥–æ–Ω–∞: {x[13]}
15) –¢–∏–ø –≤–ª–∞–¥–µ–ª—å—Ü–∞: {x[14]}                             (–§–∏–∑. –ª–∏—Ü–æ - 1, –Æ—Ä. –ª–∏—Ü–æ - 0)
"""'''

new_auto = [
    """
–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
(–û—Ç–≤–µ—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ Enter)

1) –ù–æ–º–µ—Ä –¢–°*
(–ü—Ä–∏–º–µ—Ä: –ê111–ê–ê111, –≤–≤–æ–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π)
2) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞*
3) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è*
4) –ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è*
5) –ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è*
6) –¶–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è*
7) –û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è*
8) –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ
9) –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–ª—è*
10) –ü—Ä–∏–≤–æ–¥ –∞–≤—Ç–æ*
11) –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞*
12) –¢–∏–ø –∫—É–∑–æ–≤–∞*
13) –ù–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∞–≤—Ç–æ –≤ —É–≥–æ–Ω–µ?* 
(–î–∞/–ù–µ—Ç)
14) –î–∞—Ç–∞ —É–≥–æ–Ω–∞
(–ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ —É–≥–Ω–∞–Ω? –í–≤–µ–¥–∏—Ç–µ - –ù–µ—Ç. –£–≥–Ω–∞–Ω? - –¥–∞—Ç—É —É–≥–æ–Ω–∞.)
(–ü—Ä–∏–º–µ—Ä: 12.12.2012)
15) –¢–∏–ø –≤–ª–∞–¥–µ–ª—å—Ü–∞*
(–§–∏–∑. –ª–∏—Ü–æ - 1, –Æ—Ä. –ª–∏—Ü–æ - 0)

–ü–æ–ª—è –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*" - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ
"""
]

new_vladelec = [
    """
–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
(–û—Ç–≤–µ—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ Enter)

1) –§–ò–û*
2) –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*
3) –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è*
4) –ù–æ–º–µ—Ä –¢–°*
5) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞ –¢–°*
6) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è –¢–°*

–ü–æ–ª—è –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*" - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ
"""
]

new_org = [
    """
–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
(–û—Ç–≤–µ—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ Enter)

1) –ò–ù–ù*
2) –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏*
3) –§–ò–û –Ω–∞—á–∞–ª—å–Ω–∏–∫–∞*
4) –ê–¥—Ä–µ—Å*
5) –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*
6) –ù–æ–º–µ—Ä –¢–°*
7) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞ –¢–°*
8) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è –¢–°*

–ü–æ–ª—è –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*" - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ
"""
]

new_insp = [
    """
–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
(–û—Ç–≤–µ—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ Enter)

1) –§–ò–û*
2) –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ*
3) ID —Ç–µ—Ö. –æ—Å–º–æ—Ç—Ä–∞*

–ü–æ–ª—è –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*" - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ
"""
]

OwnerInfo = r'''f"""
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ:

1) –§–ò–û: {x[1]}
2) –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {x[2]}
3) –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {x[3]}
4) –ù–æ–º–µ—Ä –¢–°: {x[4]}
5) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞ –¢–°: {x[5]}
6) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è –¢–°: {x[6]}

"""'''

OrgInfo = r'''f"""
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:

1) –ò–ù–ù: {x[0]}
2) –ù–∞–∑–≤–∞–Ω–∏–µ: {x[1]}
3) –§–ò–û –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {x[2]}
4) –ê–¥—Ä–µ—Å: {x[3]}
5) –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {x[4]}
"""'''

ToNew = [
    """
–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
(–û—Ç–≤–µ—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ Enter)

1) –î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞ –¢–°:*
2) ID –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞: *
3) –ì–æ–¥–æ–≤–æ–π –Ω–∞–ª–æ–≥ –Ω–∞ –∞–≤—Ç–æ:* 
4) –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û: 
5) –°—Ç–∞—Ç—É—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞:* 
6) –ü—Ä–∏—á–∏–Ω—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –¢–û –Ω–µ –±—ã–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ:
7) –ù–æ–º–µ—Ä –¢–°: *
8) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞: *
9) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è: *

–ü–æ–ª—è –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*" - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ
"""
]

ToInfo = r'''f"""
–î–∞–Ω–Ω—ã–µ –æ –¢–û:

1) ID –¢–µ—Ö. –æ—Å–º–æ—Ç—Ä–∞: {x[0]}
2) –î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞ –¢–°: {x[1]}
3) ID –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞: {x[2]}
4) –ì–æ–¥–æ–≤–æ–π –Ω–∞–ª–æ–≥ –Ω–∞ –∞–≤—Ç–æ: {x[3]} —Ä—É–±.
5) –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û: {x[4]} —Ä—É–±.
6) –°—Ç–∞—Ç—É—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞: {x[5]}
7) –ü—Ä–∏—á–∏–Ω—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –¢–û –Ω–µ –±—ã–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ: {x[6]}
8) –ù–æ–º–µ—Ä –¢–°: {x[7]}
9) –ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞: {x[8]}
10) –ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è: {x[9]}
"""'''

ToInfoedit = r'''f"""
–î–∞–Ω–Ω—ã–µ –æ –¢–û:

ID –¢–µ—Ö. –æ—Å–º–æ—Ç—Ä–∞: {x[0]}
2) –î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞ –¢–°: {x[1]}
3) ID –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞: {x[2]}
4) –ì–æ–¥–æ–≤–æ–π –Ω–∞–ª–æ–≥ –Ω–∞ –∞–≤—Ç–æ: {x[3]} —Ä—É–±.
5) –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û: {x[4]} —Ä—É–±.
6) –°—Ç–∞—Ç—É—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞: {x[5]}
7) –ü—Ä–∏—á–∏–Ω—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –¢–û –Ω–µ –±—ã–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ: {x[6]}
–ù–æ–º–µ—Ä –¢–°: {x[7]}
–ù–æ–º–µ—Ä –∫—É–∑–æ–≤–∞: {x[8]}
–ù–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è: {x[9]}
"""'''

answers = []

bot = telebot.TeleBot("5243511593:AAHGAPyiDax6hZCPoYO_b581PXsNs2eYoFM")
sqlite_connection = sqlite3.connect('dbpr.db', check_same_thread=False)
cursor = sqlite_connection.cursor()


def next_step(id, step):
    try:
        user = []
        user = sqlite_connection.execute('SELECT id FROM users WHERE id = ?',
                                         (id, )).fetchone()[0]
        if not user:
            sqlite_connection.execute(
                'INSERT INTO users (step, ID) values (?,?)', (
                    step,
                    id,
                ))
            sqlite_connection.commit()
        else:
            sqlite_connection.execute('UPDATE users SET step = ? WHERE ID = ?',
                                      (
                                          step,
                                          id,
                                      ))
            sqlite_connection.commit()
    except sqlite3.Error as error:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å SQLite:", error)


def numberauto(id, numberauto):
    sqlite_connection.execute('UPDATE users SET Numberauto = ? WHERE ID = ?', (
        numberauto,
        id,
    ))
    sqlite_connection.commit()


def EngineIDauto(id, EngineIDauto):
    sqlite_connection.execute('UPDATE users SET EngineIDauto = ? WHERE ID = ?',
                              (
                                  EngineIDauto,
                                  id,
                              ))
    sqlite_connection.commit()


def BodyIDauto(id, BodyIDauto):
    sqlite_connection.execute('UPDATE users SET BodyIDAuto = ? WHERE ID = ?', (
        BodyIDauto,
        id,
    ))
    sqlite_connection.commit()


def loginreg(id, login):
    sqlite_connection.execute('UPDATE users SET login = "?" WHERE ID = ?', (
        login,
        id,
    ))
    sqlite_connection.commit()


def passreg(id, password):
    sqlite_connection.execute('UPDATE users SET password = "?" WHERE ID = (?)',
                              (
                                  password,
                                  id,
                              ))
    sqlite_connection.commit()


def get_button(x):
    return types.ReplyKeyboardMarkup(row_width=x, resize_keyboard=True)


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
mainmenu = get_button(2).add('üîç –ü–æ–∏—Å–∫ –¢–°', '‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¢–°',
                             '‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞', 'üíº –ü—Ä–æ—Ñ–∏–ª—å')

# –ê–≤—Ç–æ –Ω–∞–π–¥–µ–Ω–æ
automenu = get_button(3).add('üë® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ',
                             'üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¢–°',
                             'üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¢–û',
                             'üìÑ –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç', 'üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¢–û',
                             '‚ôªÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∞–≤—Ç–æ', 'üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
# –ü–æ–∏—Å–∫ –∞–≤—Ç–æ
searchauto = get_button(3).add('üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –¢–°',
                               'üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∫—É–∑–æ–≤–∞',
                               'üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –¥–≤–∏–≥–∞—Ç–µ–ª—è', 'üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
# –ò–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
editownersmenu = get_button(3).add('üîÄ –ò–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞',
                                   'üë® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –≤—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –∞–∫–∫–∞—É–Ω—Ç–∞
reg = get_button(2).add('üîë–í–æ–π—Ç–∏', 'üìù–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', 'üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
logout = get_button(3).add('üìù–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å', '‚ôªÔ∏è–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç',
                           'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞',
                           'üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

#–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞
editaccount = get_button(2).add('üìù–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω', 'üìù–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å',
                                'üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
delaccount = get_button(2).add('‚úÖ–î–∞', 'üö´–ù–µ—Ç')

#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¢–û
addTO = get_button(2).add('üìù –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –¢–û', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')

# –í—ã—Ö–æ–¥
exit = get_button(1).add('üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

# –ù–∞–∑–∞–¥
back = get_button(1).add('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
back1 = get_button(1).add('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
back2 = get_button(1).add('‚óÄÔ∏è –ù–∞–∑–∞–¥')
back3 = get_button(1).add('üîô –ù–∞–∑–∞–¥')


@bot.message_handler(commands=['start', 's', 'help', 'h'])
def start(message):
    mess = f'–ü—Ä–∏–≤–µ—Çüëã, <b>{message.from_user.first_name}</b>, —Ç—ã –∑–∞–ø—É—Å—Ç–∏–ª —Å–µ—Ä–≤–∏—Å –ì–ò–ë–î–î.\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏—éüëá'
    bot.send_message(message.chat.id,
                     mess,
                     reply_markup=mainmenu,
                     parse_mode='html')
    next_step(message.from_user.id, 1)


@bot.message_handler(content_types=[
    'text', 'document', 'audio', 'photo', 'video', 'voice', 'location',
    'contact', 'sticker'
])
def start_quest(message):
    step = sqlite_connection.execute('SELECT step FROM users WHERE id = ?',
                                     (message.from_user.id, )).fetchall()[0][0]

    if message.text == 'üö™ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(message.from_user.id,
                         '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=mainmenu)
        next_step(message.from_user.id, 1)

    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        bot.send_message(message.from_user.id,
                         '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥',
                         reply_markup=searchauto)
        next_step(message.from_user.id, 2)

    elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        bot.send_message(message.from_user.id,
                         '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥',
                         reply_markup=automenu)
        next_step(message.from_user.id, 7)

    elif message.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥':
        bot.send_message(message.from_user.id,
                         '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥',
                         reply_markup=editownersmenu)
        next_step(message.from_user.id, 7)

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        bot.send_message(message.from_user.id,
                         '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥',
                         reply_markup=reg)
        next_step(message.from_user.id, 17)

    elif message.text == 'üìù –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –¢–û':
        bot.send_message(message.from_user.id, text=ToNew, reply_markup=back1)
        next_step(message.from_user.id, 12)

    elif message.text == "üîç –ü–æ–∏—Å–∫ –¢–°":
        bot.send_message(message.chat.id,
                         '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –¢–°.',
                         reply_markup=searchauto)
        next_step(message.from_user.id, 2)

    elif message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –¢–°' and step == 2:
        bot.send_message(message.chat.id,
                         f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¢–°: \n<b>–ü—Ä–∏–º–µ—Ä: –ê111–ê–ê111</b>',
                         parse_mode='html',
                         reply_markup=back)
        next_step(message.from_user.id, 3)

    elif message.text == "üíº –ü—Ä–æ—Ñ–∏–ª—å":
        try:
            x = sqlite_connection.execute(
                'SELECT enter FROM account WHERE userid = ?',
                (message.from_user.id, )).fetchall()[0]
            if x == (1, ):
                bot.send_message(message.chat.id,
                                 '–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.',
                                 reply_markup=logout)
                next_step(message.from_user.id, 17)
            else:
                bot.send_message(
                    message.chat.id,
                    f'–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ.\n–ï—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? - –≤–æ–π–¥–∏—Ç–µ.',
                    parse_mode='html',
                    reply_markup=reg)
                next_step(message.from_user.id, 17)
        except Exception as e:
            print(e)
            bot.send_message(
                message.chat.id,
                f'–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ.\n–ï—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? - –≤–æ–π–¥–∏—Ç–µ.',
                parse_mode='html',
                reply_markup=reg)
            next_step(message.from_user.id, 17)

    elif message.text == "üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞":
        sqlite_connection.execute(
            'UPDATE account SET enter = 0 WHERE userid = ?',
            (message.from_user.id, ))
        sqlite_connection.commit()
        bot.send_message(message.chat.id,
                         '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.',
                         reply_markup=reg)
        next_step(message.from_user.id, 17)

    elif step == 3:
        numberauto(message.from_user.id, message.text)
        try:
            x = sqlite_connection.execute(
                'SELECT * FROM Auto WHERE Number = ?',
                (message.text, )).fetchall()[0]
            bot.send_message(message.chat.id,
                             eval(autoinfo),
                             reply_markup=automenu)
        except Exception as e:
            print(e)
            bot.send_message(
                message.from_user.id,
                'üö´ –û—à–∏–±–∫–∞: –¢–° –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É.'
            )
        next_step(message.from_user.id, 7)

    elif message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∫—É–∑–æ–≤–∞' and step == 2:
        bot.send_message(message.chat.id,
                         '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫—É–∑–æ–≤–∞:',
                         reply_markup=back)
        next_step(message.from_user.id, 4)

    elif step == 4:
        try:
            EngineIDauto(message.from_user.id, message.text)
            x = sqlite_connection.execute(
                'SELECT * FROM Auto WHERE BodyID = ?',
                (message.text, )).fetchall()[0]
            bot.send_message(message.chat.id,
                             eval(autoinfo),
                             reply_markup=automenu)
            next_step(message.from_user.id, 7)

        except Exception as e:
            print(e)
            bot.send_message(
                message.from_user.id,
                'üö´ –û—à–∏–±–∫–∞: –¢–° –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É.'
            )

    elif message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –¥–≤–∏–≥–∞—Ç–µ–ª—è' and step == 2:
        bot.send_message(message.chat.id,
                         '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è:',
                         reply_markup=back)
        next_step(message.from_user.id, 5)

    elif step == 5:
        try:
            BodyIDauto(message.from_user.id, message.text)
            x = sqlite_connection.execute(
                'SELECT * FROM Auto WHERE EngineID = ?',
                (message.text, )).fetchall()[0]
            bot.send_message(message.chat.id,
                             eval(autoinfo),
                             reply_markup=automenu)
            next_step(message.from_user.id, 7)

        except Exception as e:
            print(e)
            bot.send_message(
                message.from_user.id,
                'üö´ –û—à–∏–±–∫–∞: –¢–° –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É.'
            )

    elif message.text == '‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¢–°':
        bot.send_message(message.from_user.id,
                         text=new_auto,
                         reply_markup=exit)
        next_step(message.from_user.id, 6)

    elif step == 6:
        try:
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            boolean14 = 1 if info[14] == '1' else '0'
            sqlite_connection.execute(
                'INSERT INTO Auto (Number, BodyID, EngineID, Brand, Model, Color, Volume, Comment, Helm, Drive, Year, TypeBody, DrivingAway, DateAway, OwnerType) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',
                (
                    info[0],
                    info[1],
                    info[2],
                    info[3],
                    info[4],
                    info[5],
                    float(info[6]),
                    info[7],
                    info[8],
                    info[9],
                    info[10],
                    info[11],
                    info[12],
                    info[13],
                    boolean14,
                ))
            sqlite_connection.commit()
            bot.send_message(message.from_user.id, '‚úÖ–¢–° —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö. ')

    elif message.text == 'üë® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ' and step == 7:
        try:
            ts = []
            ts = sqlite_connection.execute(
                'SELECT OwnerType FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, )).fetchall()[0]
            if ts[0] == '1':
                x = []
                x = sqlite_connection.execute(
                    'SELECT * FROM AutoVladelca WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                    (message.from_user.id, )).fetchall()[0]
                bot.send_message(message.from_user.id,
                                 eval(OwnerInfo),
                                 reply_markup=editownersmenu)
            else:
                x = []
                x = sqlite_connection.execute(
                    'SELECT * FROM AutoOrg WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                    (message.from_user.id, )).fetchall()[0]
                bot.send_message(message.from_user.id,
                                 eval(OrgInfo),
                                 reply_markup=editownersmenu)
        except:
            bot.send_message(message.from_user.id,
                             '–£ –∞–≤—Ç–æ –Ω–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ.',
                             reply_markup=editownersmenu)

    elif message.text == 'üë® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞' and step == 7:
        bot.send_message(message.from_user.id,
                         text=new_vladelec,
                         reply_markup=back2)
        next_step(message.from_user.id, 16)

    elif step == 16:
        try:
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            sqlite_connection.execute(
                'INSERT INTO AutoVladelca (OwnerFIO, OwnerPhone, OwnerAddress, AutoNumber, AutoBodyID, AutoEngineID) VALUES (?, ?, ?, ?, ?, ?)',
                (
                    info[0],
                    info[1],
                    info[2],
                    info[3],
                    info[4],
                    info[5],
                ))
            sqlite_connection.commit()
            bot.send_message(message.from_user.id,
                             '‚úÖ –í–ª–∞–¥–µ–ª–µ—Ü —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö. ')

    elif message.text == 'üîÄ –ò–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞' and step == 7:
        try:
            ts = []
            ts = sqlite_connection.execute(
                'SELECT OwnerType FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, )).fetchall()[0]

            if ts[0] == '1':
                x = []
                x = sqlite_connection.execute(
                    'SELECT * FROM AutoVladelca WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                    (message.from_user.id, )).fetchall()[0]
                bot.send_message(
                    message.from_user.id,
                    eval(OwnerInfo) +
                    '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
                    reply_markup=back2)
            else:
                x = []
                x = sqlite_connection.execute(
                    'SELECT * FROM AutoOrg WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                    (message.from_user.id, )).fetchall()[0]
                bot.send_message(
                    message.from_user.id,
                    eval(OrgInfo) +
                    '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:',
                    reply_markup=back2)

            next_step(message.from_user.id, 9)
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –£ –∞–≤—Ç–æ –Ω–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.')

    elif step == 9:
        if message.text == '1':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 41)
        elif message.text == '2':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 42)
        elif message.text == '3':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 43)

    elif step == 41:
        sqlite_connection.execute(
            'UPDATE AutoVladelca SET OwnerFIO = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM AutoVladelca WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(OwnerInfo) +
            '‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 9)

    elif step == 42:
        sqlite_connection.execute(
            'UPDATE AutoVladelca SET OwnerPhone = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM AutoVladelca WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(OwnerInfo) +
            '‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 9)

    elif step == 43:
        sqlite_connection.execute(
            'UPDATE AutoVladelca SET OwnerAddress = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM AutoVladelca WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(OwnerInfo) +
            '‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 9)

    elif message.text == 'üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¢–°' and step == 7:
        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]
        bot.send_message(
            message.from_user.id,
            eval(autoinfo) +
            '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:',
            reply_markup=back1,
        )
        next_step(message.from_user.id, 8)

    elif step == 8:
        if message.text == '1':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 51)
        elif message.text == '2':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 52)
        elif message.text == '3':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 53)
        elif message.text == '4':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 54)
        elif message.text == '5':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 55)
        elif message.text == '6':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 56)
        elif message.text == '7':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 57)
        elif message.text == '8':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 58)
        elif message.text == '9':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 59)
        elif message.text == '10':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 510)
        elif message.text == '11':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 511)
        elif message.text == '12':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 512)
        elif message.text == '13':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 513)
        elif message.text == '14':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 514)
        elif message.text == '15':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 515)
        else:
            bot.send_message(message.from_user.id,
                             "üö´ –û—à–∏–±–∫–∞: —Ç–∞–∫–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –Ω–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ")

    elif step == 51:
        sqlite_connection.execute(
            'UPDATE Auto SET Number = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]
        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 52:
        sqlite_connection.execute(
            'UPDATE Auto SET BodyId = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 53:
        sqlite_connection.execute(
            'UPDATE Auto SET EngineId = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 54:
        sqlite_connection.execute(
            'UPDATE Auto SET Brand = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 55:
        sqlite_connection.execute(
            'UPDATE Auto SET Model = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 56:
        sqlite_connection.execute(
            'UPDATE Auto SET Color = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 57:
        sqlite_connection.execute(
            'UPDATE Auto SET Volume = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 58:
        sqlite_connection.execute(
            'UPDATE Auto SET Comment = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 59:
        sqlite_connection.execute(
            'UPDATE Auto SET Helm = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 510:
        sqlite_connection.execute(
            'UPDATE Auto SET Drive = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 511:
        sqlite_connection.execute(
            'UPDATE Auto SET Year = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 512:
        sqlite_connection.execute(
            'UPDATE Auto SET TypeBody = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 513:
        sqlite_connection.execute(
            'UPDATE Auto SET DrivingAway = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 514:
        sqlite_connection.execute(
            'UPDATE Auto SET DateAway = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif step == 515:
        sqlite_connection.execute(
            'UPDATE Auto SET OwnerType = ? WHERE Number IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(autoinfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 8)

    elif message.text == '‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞' and step == 1:
        bot.send_message(message.from_user.id,
                         text=new_insp,
                         reply_markup=exit)
        next_step(message.from_user.id, 10)

    elif step == 10:
        try:
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            sqlite_connection.execute(
                'INSERT INTO Inspector (InspFIO, InspDR, TOid) VALUES (?, ?, ?)',
                (
                    info[0],
                    info[1],
                    info[2],
                ))
            sqlite_connection.commit()
            bot.send_message(message.from_user.id,
                             '‚úÖ –ò–Ω—Å–ø–µ–∫—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö. ')

    elif message.text == 'üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¢–û' and step == 7:
        try:
            x = []
            x = sqlite_connection.execute(
                'SELECT * FROM Toauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, )).fetchall()[0]
            bot.send_message(message.from_user.id,
                             eval(ToInfo),
                             reply_markup=back1)
            next_step(message.from_user.id, 7)
        except Exception as e:
            print(e)
            bot.send_message(
                message.from_user.id,
                'üö´ –û—à–∏–±–∫–∞: –ó–∞–ø–∏—Å—å –æ –¢–û –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –¢–û.',
                reply_markup=addTO)

    elif message.text == 'üë® –ù–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü' and step == 7:
        bot.send_message(message.from_user.id,
                         text=new_vladelec,
                         reply_markup=exit)
        next_step(message.from_user.id, 10)

    elif step == 10:
        try:
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            sqlite_connection.execute(
                'INSERT INTO AutoVladelca (OwnerFIO, OwnerPhone, OwnerAddress, AutoNumber, BodyID, EngineID) VALUES (?, ?, ?, ?, ?, ?)',
                (
                    info[0],
                    info[1],
                    info[2],
                    info[3],
                    info[4],
                    info[5],
                ))
            sqlite_connection.commit()
            bot.send_message(message.from_user.id,
                             '‚úÖ–í–ª–∞–¥–µ–ª–µ—Ü —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö. ')

    elif step == 12:
        try:
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            sqlite_connection.execute(
                'INSERT INTO TOauto (DateSee, InspID, YearTax, TOtax, Okey, Reason, AutoNumber, AutoBodyID, AutoEngineID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)',
                (
                    info[0],
                    info[1],
                    info[2],
                    info[3],
                    info[4],
                    info[5],
                    info[6],
                    info[7],
                    info[8],
                ))
            sqlite_connection.commit()
            bot.send_message(message.from_user.id,
                             '‚úÖ –î–∞–Ω–Ω—ã–µ –æ –¢–û —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö. ')

    elif message.text == 'üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¢–û' and step == 7:
        try:
            x = []
            x = sqlite_connection.execute(
                'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, )).fetchall()[0]
            bot.send_message(
                message.from_user.id,
                eval(ToInfoedit) +
                '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
                reply_markup=back1)
            next_step(message.from_user.id, 14)
        except:
            bot.send_message(
                message.from_user.id,
                'üö´ –û—à–∏–±–∫–∞: –ó–∞–ø–∏—Å—å –æ –¢–û –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –¢–û.',
                reply_markup=addTO)

    elif step == 14:
        if message.text == '2':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 62)
        elif message.text == '3':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 63)
        elif message.text == '4':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 64)
        elif message.text == '5':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 65)
        elif message.text == '6':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 66)
        elif message.text == '7':
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç:')
            next_step(message.from_user.id, 67)
        else:
            bot.send_message(message.from_user.id,
                             'üö´–û—à–∏–±–∫–∞: –≠—Ç–æ—Ç –ø—É–Ω–∫—Ç –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å.')

    elif step == 62:
        sqlite_connection.execute(
            'UPDATE TOauto SET DateSee = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(ToInfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 14)

    elif step == 63:
        sqlite_connection.execute(
            'UPDATE TOauto SET InspID = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(ToInfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 14)

    elif step == 64:
        sqlite_connection.execute(
            'UPDATE TOauto SET YearTax = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(ToInfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 14)
    elif step == 65:
        sqlite_connection.execute(
            'UPDATE TOauto SET TOtax = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(ToInfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 14)
    elif step == 66:
        sqlite_connection.execute(
            'UPDATE TOauto SET Okey = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(ToInfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 14)
    elif step == 67:
        sqlite_connection.execute(
            'UPDATE TOauto SET Reason = ? WHERE AutoNumber IN (SELECT numberauto FROM users WHERE Id = ?)',
            (message.text, message.from_user.id))
        sqlite_connection.commit()

        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        bot.send_message(
            message.from_user.id,
            eval(ToInfoedit) +
            '\n\n‚úÖ –ü—É–Ω–∫—Ç –∏–∑–º–µ–Ω—ë–Ω\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—É–Ω–∫—Ç? - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä'
        )
        next_step(message.from_user.id, 14)

    elif message.text == "üìÑ –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç" and step == 7:
        x = []
        x = sqlite_connection.execute(
            'SELECT * FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?)',
            (message.from_user.id, )).fetchall()[0]

        context = {
            'nomerts': x[0],
            'nomerkyzova': x[1],
            'nomerengine': x[2],
            'markaauto': x[3],
            'modelauto': x[4],
            'colorauto': x[5],
            'volume': x[6],
            'comment': x[7],
            'helm': x[8],
            'drive': x[9],
            'year': x[10],
            'typebody': x[11],
            'drivingaway': x[12],
            'dateaway': x[13],
            'ownertype': x[14],
            'toid': x[17]
        }

        doc.render(context)
        buffer = BytesIO()
        doc.save(buffer)
        buffer.seek(0)
        bot.send_document(message.from_user.id,
                          buffer,
                          caption='‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!',
                          visible_file_name=f'{x[0]}.docx')

    elif message.text == '‚ôªÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∞–≤—Ç–æ' and step == 7:
        bot.send_message(
            message.from_user.id,
            '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –æ–± –∞–≤—Ç–æ?\n –í–≤–µ–¥–∏—Ç–µ "+", –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å',
            reply_markup=back1)
        next_step(message.from_user.id, 15)

    elif step == 15:
        if message.text == '+':
            sqlite_connection.execute(
                'DELETE FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM AutoOrg WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM AutoVladelca WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM TOauto WHERE AutoNumber IN(SELECT numberauto FROM users WHERE Id = ?)',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM Auto WHERE BodyID IN(SELECT BodyID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM AutoOrg WHERE AutoBodyID IN(SELECT BodyID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM AutoVladelca WHERE AutoBodyID IN(SELECT BodyID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM TOauto WHERE AutoBodyID IN(SELECT BodyID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM Auto WHERE EngineID IN(SELECT EngineID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM AutoOrg WHERE AutoEngineID IN(SELECT EngineID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM AutoVladelca WHERE AutoEngineID IN(SELECT EngineID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM TOauto WHERE AutoEngineID IN(SELECT EngineID FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            sqlite_connection.execute(
                'DELETE FROM Inspector WHERE TOid IN(SELECT TOid FROM Auto WHERE Number IN(SELECT numberauto FROM users WHERE Id = ?))',
                (message.from_user.id, ))

            bot.send_message(message.from_user.id,
                             '‚úÖ –ê–≤—Ç–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ',
                             reply_markup=exit)
        else:
            bot.send_message(
                message.from_user.id,
                '–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å "+", –µ—Å–ª–∏ —Ö–æ—Ç–∏n–µ –≤—ã–π—Ç–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ'
            )

    elif message.text == 'üîë–í–æ–π—Ç–∏' and step == 17:
        bot.send_message(
            message.from_user.id,
            f'–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å (—á–µ—Ä–µ–∑ enter) –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç.\n<b>(–ü—Ä–∏–º–µ—Ä:\nlogin\npassword)</b>',
            reply_markup=exit,
            parse_mode='html')
        next_step(message.from_user.id, 18)

    elif step == 18:
        try:
            info = []
            for i in message.text.split('\n'):
                info.append(i)

            sqlite_connection.execute(
                'UPDATE users SET loginacc = ?, passacc = ? WHERE ID = ?', (
                    info[0],
                    info[1],
                    message.from_user.id,
                ))
            sqlite_connection.commit()

            z = []
            z = sqlite_connection.execute(
                'SELECT login, password FROM account WHERE userID = ?',
                (message.from_user.id, )).fetchall()[0]
            login = z[0]
            password = z[1]

            x = []
            x = sqlite_connection.execute(
                'SELECT loginacc, passacc FROM users WHERE ID = ?',
                (message.from_user.id, )).fetchall()[0]
            login1 = x[0]
            password1 = x[1]
            hash_object = hashlib.md5(str(password1).encode())
            c = hash_object.hexdigest()

            if login == login1 and c == password:
                bot.send_message(message.from_user.id,
                                 '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!',
                                 reply_markup=logout)
                sqlite_connection.execute('UPDATE account SET enter = ?',
                                          (1, ))
                sqlite_connection.commit()
                next_step(message.from_user.id, 17)
            else:
                sqlite_connection.execute('UPDATE account SET enter = ?',
                                          (0, ))
                sqlite_connection.commit()
                bot.send_message(
                    message.from_user.id,
                    '–õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∏–ª–∏ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.',
                    reply_markup=exit)
        except:
            sqlite_connection.execute('UPDATE account SET enter = ?', (0, ))
            sqlite_connection.commit()
            bot.send_message(
                message.from_user.id,
                '–õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∏–ª–∏ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.',
                reply_markup=exit)

    elif message.text == 'üìù–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' and step == 17:
        try:
            z = []
            z = sqlite_connection.execute(
                'SELECT login, password FROM account WHERE userID = ?',
                (message.from_user.id, )).fetchone()
            if not z:
                bot.send_message(
                    message.from_user.id,
                    f'–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å (—á–µ—Ä–µ–∑ enter) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n<b>(–ü—Ä–∏–º–µ—Ä:\nlogin\npassword)</b>',
                    reply_markup=exit,
                    parse_mode='html')
                next_step(message.from_user.id, 21)
            else:
                bot.send_message(
                    message.from_user.id,
                    '‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç! –£–¥–∞–ª–∏—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.',
                    reply_markup=reg)
                next_step(message.from_user.id, 17)
        except:
            bot.send_message(message.from_user.id, 'üö´–û—à–∏–±–∫–∞')

    elif step == 21:
        try:
            f1 = False
            f2 = False
            f3 = False
            f4 = False
            f5 = False
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            m = info[1]
            a = info[0]
            #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–µ m —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ symbols, –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä
            sybmols = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_']
            Capital_letter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
            digits = '1234567890'
            rualph = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø'
            for i in a:
                if i in rualph:
                    f4 = True
            for i in m:
                if i in sybmols:
                    f1 = True
                if i in Capital_letter:
                    f2 = True
                if i in digits:
                    f3 = True
                if i in rualph:
                    f5 = True
                    break
            if len(m) < 17 and len(
                    m
            ) > 3 and f1 != True and f2 == True and f3 == True and f4 != True and f5 != True:
                f1 = False
                f2 = False
                f3 = False
                f4 = False
                f5 = False
                h = info[1]
                hash_object = hashlib.md5(str(h).encode())
                h = hash_object.hexdigest()
                sqlite_connection.execute(
                    'INSERT INTO account (login, password, userID) VALUES (?, ?, ?)',
                    (
                        info[0],
                        h,
                        message.from_user.id,
                    ))
                sqlite_connection.commit()
                bot.send_message(message.from_user.id,
                                 '‚úÖ –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!',
                                 reply_markup=reg)
                next_step(message.from_user.id, 17)
            else:
                bot.send_message(
                    message.from_user.id,
                    '–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –ª–æ–≥–∏–Ω—É:\n1. –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã.\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–∞—Ä–æ–ª—é:\n1. –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤.\n2. –ü–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã: !@#$%^&*()_\n3. –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É –∏ –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É.\n4. –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                    parse_mode='html')
        except Exception as e:
            print(e)
            bot.send_message(
                message.from_user.id,
                'üö´ –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–π –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏.',
                reply_markup=back3)

    elif message.text == 'üìù–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å' and step == 17:
        try:
            z = []
            z = sqlite_connection.execute(
                'SELECT login, password FROM account WHERE userID = ?',
                (message.from_user.id, )).fetchall()[0]
            bot.send_message(message.from_user.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ',
                             reply_markup=editaccount)
            next_step(message.from_user.id, 22)
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´ –û—à–∏–±–∫–∞: –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.',
                             reply_markup=editaccount)

    elif message.text == 'üìù–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω' and step == 22:
        bot.send_message(message.from_user.id,
                         '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω:',
                         reply_markup=exit)
        next_step(message.from_user.id, 23)

    elif step == 23:
        try:
            z = []
            z = sqlite_connection.execute(
                'SELECT login FROM account WHERE userID = ?',
                (message.from_user.id, )).fetchall()[0]
            f1 = False
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            login = info[0]
            rualph = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø'
            for i in login:
                if i in rualph:
                    f1 = True
                    break
            if login == z[0]:
                bot.send_message(
                    message.from_user.id,
                    '–í–≤–µ–¥—ë–Ω–Ω—ã–π –ª–æ–≥–∏–Ω —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º.\n–ò–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.',
                    parse_mode='html')
            else:
                if f1 != True:
                    f1 = False
                    sqlite_connection.execute(
                        'UPDATE account SET login = ? WHERE userID = ?', (
                            info[0],
                            message.from_user.id,
                        ))
                    sqlite_connection.commit()

                    z = []
                    z = sqlite_connection.execute(
                        'SELECT login FROM account WHERE userID = ?',
                        (message.from_user.id, )).fetchall()[0]
                    bot.send_message(message.from_user.id,
                                     '‚úÖ–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!\n–ù–æ–≤—ã–π –ª–æ–≥–∏–Ω: ' +
                                     z[0],
                                     reply_markup=logout,
                                     parse_mode='html')
                    next_step(message.from_user.id, 17)
                else:
                    bot.send_message(
                        message.from_user.id,
                        '–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –ª–æ–≥–∏–Ω—É:\n1. –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                        parse_mode='html')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´ –û—à–∏–±–∫–∞: –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.',
                             reply_markup=editaccount)
            next_step(message.from_user.id, 22)

    elif message.text == 'üìù–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å' and step == 22:
        bot.send_message(message.from_user.id,
                         '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:',
                         reply_markup=exit)
        next_step(message.from_user.id, 24)

    elif step == 24:
        try:
            f1 = False
            f2 = False
            f3 = False
            f4 = False
            info = []
            for i in message.text.split('\n'):
                info.append(i)
            password = info[0]
            sybmols = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_']
            Capital_letter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
            digits = '1234567890'
            rualph = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø'
            for i in password:
                if i in sybmols:
                    f1 = True
                if i in Capital_letter:
                    f2 = True
                if i in digits:
                    f3 = True
                if i in rualph:
                    f4 = True
                    break
            if len(password) < 17 and len(
                    password
            ) > 3 and f1 != True and f2 == True and f3 == True and f4 != True:
                f1 = False
                f2 = False
                f3 = False
                f4 = False
                hash_object = hashlib.md5(str(password).encode())
                c = hash_object.hexdigest()

                sqlite_connection.execute(
                    'UPDATE account SET password = ? WHERE userID = ?', (
                        c,
                        message.from_user.id,
                    ))
                sqlite_connection.commit()
                bot.send_message(message.from_user.id,
                                 '‚úÖ–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!',
                                 reply_markup=logout)
                next_step(message.from_user.id, 17)
            else:
                bot.send_message(
                    message.from_user.id,
                    '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–∞—Ä–æ–ª—é:\n1. –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤.\n2. –ü–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã: !@#$%^&*()_\n3. –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É –∏ –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É.\n4. –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                    parse_mode='html')
        except Exception as e:
            print(e)
            bot.send_message(message.from_user.id,
                             'üö´ –û—à–∏–±–∫–∞: –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.',
                             reply_markup=editaccount)
            next_step(message.from_user.id, 22)

    elif message.text == '‚ôªÔ∏è–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç' and step == 17:
        bot.send_message(message.from_user.id,
                         '–í—ã —É–≤–µ—Ä–µ–Ω—ã?',
                         reply_markup=delaccount)
        next_step(message.from_user.id, 25)

    elif message.text == '‚úÖ–î–∞' and step == 25:
        sqlite_connection.execute('DELETE FROM account WHERE userID = ?',
                                  (message.from_user.id, ))
        sqlite_connection.commit()
        bot.send_message(message.from_user.id,
                         '‚úÖ–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!',
                         reply_markup=exit)

    elif message.text == 'üö´–ù–µ—Ç' and step == 25:
        bot.send_message(message.from_user.id,
                         '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞.',
                         reply_markup=logout)
        next_step(message.from_user.id, 17)

    elif message.text == 'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' and step == 17:
        x = []
        x = sqlite_connection.execute(
            'SELECT COUNT(id) FROM account').fetchall()[0]
        bot.send_message(
            message.from_user.id,
            'üìä–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ' + str(x[0]))
    else:
        bot.send_message(
            message.from_user.id,
            'üßê–•–º–º... –ß—Ç–æ-—Ç–æ —è –Ω–µ –ø—Ä–∏–ø–æ–º–∏–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ - /start'
        )

    try:
        sqlite_connection.commit()
    except:
        pass


bot.polling(non_stop=True)